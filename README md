# Hope for Life Jesus Ministry International - GitHub Pages Website

This repository contains the static website files for Hope for Life Jesus Ministry International, designed to be hosted on GitHub Pages.

## Files Included

### Core Website Files
- `index.html` - Main website file with all content
- `styles.css` - Complete styling and responsive design
- `script.js` - JavaScript functionality and interactions

### Assets Folder
- `assets/logo.png` - Ministry logo
- `assets/pastor-dismus.jpg` - Pastor Dismus Mutuku photo
- `assets/ev-stanley.jpg` - Ev. Stanley George photo
- `assets/pastor-jose.jpg` - Pastor Jose Mathew photo
- `assets/ev-ronald.jpg` - Ev. Ronald Maina photo
- `assets/pst-larmack.jpg` - Pst Larmack Oyath photo
- `assets/graduates-1.jpg` - Graduates photo 1
- `assets/graduates-2.jpg` - Graduates photo 2
- `assets/graduates-3.jpg` - Graduates photo 3

## How to Host on GitHub Pages

### Step 1: Create a GitHub Repository
1. Go to GitHub.com and create a new repository
2. Name it something like `hope-for-life-ministry` or `ministry-website`
3. Make sure it's set to **Public** (required for free GitHub Pages)
4. Initialize with a README if you want

### Step 2: Upload Your Files
1. Download all files from the `github-pages` folder to your computer
2. In your GitHub repository, click "Upload files"
3. Drag and drop all the files:
   - `index.html`
   - `styles.css`
   - `script.js`
   - `README.md`
   - The entire `assets` folder with all images
4. Write a commit message like "Initial website upload"
5. Click "Commit changes"

### Step 3: Enable GitHub Pages
1. In your repository, go to **Settings** tab
2. Scroll down to **Pages** section on the left sidebar
3. Under "Source", select **Deploy from a branch**
4. Choose **main** branch and **/ (root)** folder
5. Click **Save**

### Step 4: Access Your Website
1. GitHub will provide you with a URL like: `https://yourusername.github.io/repository-name`
2. It may take a few minutes for the site to be live
3. You can find the URL in the Pages settings section

## Website Features

### Responsive Design
- Mobile-friendly layout that works on all devices
- Dark/light theme toggle
- Smooth scrolling navigation

### Interactive Elements
- Image gallery with modal view for graduates photos
- Contact form that opens email client
- Prayer request form that sends to pastor's email
- 3D animated contact icons

### Sections Included
- **Hero Section** - Welcome message with ministry logo
- **About Section** - Ministry story and Pastor Dismus information
- **Ministries Section** - Overview of church programs
- **Bible College Section** - Academic programs and faculty
- **Gallery Section** - Graduates photos only
- **Prayer Requests** - Direct email to dismusmutuku@gmail.com
- **Contact Section** - Contact information and form

### Email Integration
- Prayer requests automatically open email to dismusmutuku@gmail.com
- Contact form also sends to the pastor's email
- No server required - works with user's email client

## Customization

### To Update Content
1. Edit `index.html` to change text, add sections, or modify layout
2. Commit changes to GitHub to update the live site

### To Change Styling
1. Edit `styles.css` to modify colors, fonts, or layout
2. All colors use CSS variables for easy theme customization

### To Add New Images
1. Upload images to the `assets` folder
2. Update `index.html` to reference new image paths
3. Ensure images are optimized for web (under 1MB each)

## Technical Details

### Dependencies
- **Lucide Icons** - Loaded from CDN for all icons
- **Google Fonts** - Merriweather and Open Sans font families
- **Pure HTML/CSS/JS** - No build process required

### Browser Support
- Modern browsers (Chrome, Firefox, Safari, Edge)
- Mobile browsers (iOS Safari, Chrome Mobile)
- Internet Explorer 11+ (basic support)

### Performance
- Optimized images and minimal CSS/JS
- Fast loading times
- SEO-friendly structure

## Support

If you need help with:
- GitHub Pages setup
- Content updates
- Technical issues

Contact the web developer who created this website or refer to GitHub Pages documentation.

## Updates

To update the website:
1. Make changes to the files
2. Upload changed files to GitHub
3. Changes will appear live within a few minutes

The website will automatically use the latest version of all files in the repository.